#!/usr/bin/env bash

ps1_titlebar()
{
  case $TERM in
    (xterm*|rxvt*)
      printf "%s" "\033]0;\\u@\\h: \W\\007"
      ;;
  esac
}

ps1_identity()
{
  if (( $UID == 0 )) ; then
    printf "%s" "\[\033[31m\]\\u\[\033[0m\]@\[\033[36m\]\\h\[\033[35m\]:\w\[\033[0m\] "
  else
    printf "%s" "\[\033[32m\]\\u\[\033[0m\]@\[\033[36m\]\\h\[\033[35m\]:\w\[\033[0m\] "
  fi
}

#ps1_rvm()
#{
    #if [ -a $(pwd)/Gemfile ]; then
        #printf "$(rvm-prompt) "
    #fi
#}

ps1_git() {
  local branch="" sha1="" color=""

  shopt -s extglob

  command -v git >/dev/null 2>&1 || {
    printf " \033[1;37m\033[41m[git not found]\033[m "
    return 0
  }

  branch=$(git symbolic-ref -q HEAD 2>/dev/null) || return 0 # Not in git repo.
  branch=${branch##refs/heads/}

  # Now we display the branch.
  sha1=$(git rev-parse --short --quiet HEAD)

  case ${branch} in
    production|prod)
      color=1 # red
      ;;
    master)
      color=1 # red
      ;;
    stage)
      color=3 # yellow
      ;;
    dev|development)
      color=4 # cyan
      ;;
    next)
      color=6 # gray
      ;;
    *)
      if [[ -n ${branch} ]]; then # Feature branch
        color=2
      else
        true
      fi
      ;;
  esac

  printf "\033[3${color}m(git:${branch}:${sha1})\033[0m "
  return 0
}

ps1_hg()
{
  local branch="" sha1="" color=""

  shopt -s extglob

  branch=$(hg branch 2>/dev/null) || return 0
  sha1=$(hg tip | head -1 | cut -c 14-)

  case ${branch} in
    stable)
      color=1 # red
      ;;
    default)
      color=2 # green
      ;;
    stage)
      color=3 # yellow
      ;;
    dev|development)
      color=4 # cyan
      ;;
    next)
      color=6 # gray
      ;;
    *)
      if [[ -n ${branch} ]]; then # Feature branch
        color=4
      else
        true
      fi
      ;;
  esac

  if [[ $color -gt 0 ]] ; then
	printf "\033[3${color}m(hg:${branch}:${sha1})\033[0m"
  fi
  return 0
}

ps1_update()
{
  local prompt_char='$' separator="\n" notime=0

  (( $UID == 0 )) && prompt_char='#'

  while [[ $# -gt 0 ]] ; do
    local token="$1" ; shift

    case "$token" in
      --trace)
        export PS4="+ \${BASH_SOURCE##\${rvm_path:-}} : \${FUNCNAME[0]:+\${FUNCNAME[0]}()}  \${LINENO} > "
        set -o xtrace
        ;;
      --prompt)
        prompt_char="$1"
        shift
        ;;
      --noseparator)
        separator=""
        ;;
      --separator)
        separator="$1"
        shift
        ;;
      --notime)
        notime=1
        ;;
      *)
        true # Ignore everything else.
        ;;
    esac
  done

  PS1="$(ps1_titlebar)$(ps1_identity)$(ps1_hg)$(ps1_git)${separator}${prompt_char} "
}

ps1_set()
{
  PS1="ps1_update $@"
}

export PROMPT_COMMAND=ps1_update
